var read = function(){
	var db = Ti.Database.open("stockDB");
	db.execute("CREATE TABLE IF NOT EXISTS stockTBL (id INTEGER PRIMARY KEY, name TEXT, phone TEXT, street TEXT, city TEXT, state TEXT, zip TEXT, crossStreet TEXT)");
	var dbResult = db.execute("SELECT * FROM stockTBL");
	var info = [];	
		while (dbResult.isValidRow()){
			var localData = {
				name: dbResult.fieldByName("name"),
				phone: dbResult.fieldByName("phone"),
				street: dbResult.fieldByName("address"),
				city: dbResult.fieldByName("city"),
				state: dbResult.fieldByName("state"),
				zip: dbResult.fieldByName("zip"),
				crossStreet: dbResult.fieldByName("crossStreet"),
			};
		info.push(localData);	
		console.log(localData);
		dbResult.next();
	}

	dbResult.close();
	db.close();
	var ui = require("ui");
	ui.buildUI(info);
};

var save = function(savedData){
	var db = Ti.Database.open("stockDB");
	db.execute("CREATE TABLE IF NOT EXISTS stockTBL (id INTEGER PRIMARY KEY, name TEXT, phone TEXT, street TEXT, city TEXT, state TEXT, zip TEXT, crossStreet TEXT)");
	db.execute("DELETE FROM stockTBL");
	for(i=0, j=savedData.length; i<j; i++){
		db.execute("INSERT INTO stockTBL (name, phone, street, city, state, zip, crossStreet) VALUES (?, ?, ?, ?, ?, ?, ?)", savedData[i].name, savedData[i].phone, savedData[i].street, savedData[i].city, savedData[i].state, savedData[i].zip, savedData[i].crossStreet);
	}; 
	// var rowID = db.lastInsertRowId;
	// console.log(rowID);
	db.close();
	read(); 
};

exports.save = save;
//exports.read = read;